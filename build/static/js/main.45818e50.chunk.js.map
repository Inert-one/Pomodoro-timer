{"version":3,"sources":["img/cancel.svg","component/NavBar.jsx","component/CircularSelector.jsx","component/CircularSelector2.jsx","component/Time.jsx","component/About.jsx","component/Setting.jsx","component/NavButton.jsx","component/NotFound404.jsx","component/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","window","onhashchange","NavBar","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","id","Container","Brand","Toggle","aria-controls","Collapse","Nav","className","onClick","props","onSettingClick","Link","onAboutClick","Component","CircularSelector","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","currentValue","selector","dataForProgress","paused","TimestampOnStart","firstTimePaused","remainingTime","dataForProgressVar","handleChange","setState","componentDidUpdate","pauseOnStart","document","getElementById","click","titleValue","time","switchChecked","ReactDOM","render","Fragment","dataForProgressFunction","data","localStorage","removeItem","setItem","Math","floor","_this2","getItem","Number","addEventListener","ev","componentWillUnmount","setTimeout","_this3","lib","size","gradientColorFrom","gradientColorTo","knobRadius","progressWidth","circleWidth","progressColor","tooltipColor","tooltipSize","min","max","maxValue","onChange","Date","now","handleStart","Timer","initialTime","direction","onResume","_ref","start","resume","pause","timerState","stop","reset","m","Hours","formatValue","valueH","Minutes","valueM","Seconds","valueS","disabled","style","display","handleStop","Time","react_live_clock_lib_default","format","ticking","clear","About","src","cancel","alt","onCancel","Setting","PomodoroTimeData","BreakTimeData","ClickSubmit","ClickSubmitTimeOut1","ClickSubmitTimeOut2","history","push","replace","location","pathname","handlerReset","e","target","Form","onSubmit","onTimeSubmit","Group","as","Row","Label","column","sm","Col","react_switch_default","checked","handleSwitchChange","onColor","offColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","Control","type","placeholder","name","required","onPomodoroTimeDataChange","onBreakTimeDataChange","NavButton","onBreak","started","alert","classList","add","remove","onPomodoro","onTime","NotFound404","Main","handleCancel","handleAboutClick","getElementsByClassName","handleSettingClick","handleTimeSubmit","preventDefault","react_router_dom","src_component_NavBar","src_component_About","react_router","src_component_Setting","assign","src_component_NavButton","exact","path","to","src_component_CircularSelector","CircularSelector2","src_component_Time","src_component_NotFound404","App","component","Boolean","hostname","match","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kaCIxCC,OAAOC,aAAe,aAEf,IAiCQC,EAjCf,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEI,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,kBAAgB,EAChBC,OAAO,KACPC,GAAG,QACHC,QAAQ,QACRC,GAAG,gBAEHR,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACC,EAAA,EAAOO,MAAR,uBACAV,EAAAC,EAAAC,cAACC,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,0BAC7BZ,EAAAC,EAAAC,cAACC,EAAA,EAAOU,SAAR,CAAiBL,GAAG,yBAClBR,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAKC,UAAU,YACff,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACEd,EAAAC,EAAAC,cAAA,OAAKc,QAASzB,KAAK0B,MAAMC,gBACvBlB,EAAAC,EAAAC,cAACY,EAAA,EAAIK,KAAL,kBAGFnB,EAAAC,EAAAC,cAAA,OAAKc,QAASzB,KAAK0B,MAAMG,cACvBpB,EAAAC,EAAAC,cAACY,EAAA,EAAIK,KAAL,wBAtBlBhC,EAAA,CAA4BkC,qCCgXbC,EA3Wf,SAAAlC,GAAA,SAAAkC,IAAA,IAAAC,EAAAC,EAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,GAAA,QAAAG,EAAA9B,UAAA+B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAlC,UAAAkC,GAAA,OAAAL,EAAAnC,OAAAG,EAAA,EAAAH,CAAAE,MAAAgC,EAAAlC,OAAAI,EAAA,EAAAJ,CAAAiC,IAAAQ,KAAApC,MAAA6B,EAAA,CAAAhC,MAAAwC,OAAAJ,MACEK,MAAQ,CACNjC,MAAOyB,EAAKP,MAAMgB,aAClBC,UAAU,EACVC,gBAAiB,EACjBC,QAAQ,EACRC,iBAAkB,EAClBC,iBAAiB,EACjBC,cAAe,GARnBf,EAUEgB,mBAAqB,EAVvBhB,EAWEiB,aAAe,SAAA1C,GACbyB,EAAKkB,SAAS,CAAE3C,WAZpByB,EAoCEmB,mBAAqB,aApCvBnB,EA4DEoB,aAAe,WACTpB,EAAKQ,MAAMI,SAAWZ,EAAKQ,MAAME,UACnCW,SAASC,eAAe,uBAAuBC,SA9DrDvB,EAiEEwB,WAAa,SAAAC,GACPzB,EAAKP,MAAMiC,cACZ1B,EAAKQ,MAAME,SAKRiB,IAASC,OACPpD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,uBACAR,SAASC,eAAe,UAN1BK,IAASC,OACPpD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KAAiBJ,GACjBJ,SAASC,eAAe,UAO9BK,IAASC,OACPpD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,uBACAR,SAASC,eAAe,WA/EhCtB,EAmFE8B,wBAA0B,SAAAC,GACxB/B,EAAKgB,mBAAqBe,GApF9B/B,EAAA,OAAAnC,OAAAO,EAAA,EAAAP,CAAAiC,EAAAlC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAiC,EAAA,EAAAxB,IAAA,uBAAAC,MAAA,WAeSR,KAAKyC,MAAME,UAadsB,aAAaC,WAAW,WACxBD,aAAaC,WAAW,aACxBD,aAAaC,WAAW,SACxBD,aAAaC,WAAW,iBACxBD,aAAaC,WAAW,YACxBD,aAAaC,WAAW,YAjBxBD,aAAaE,QAAQ,YAAanE,KAAKyC,MAAMK,kBAC7CmB,aAAaE,QACX,QACkD,GAAlDC,KAAKC,MAAOrE,KAAKyC,MAAMjC,MAAQ,IAAO,IAAO,GAAU,KAEzDyD,aAAaE,QACX,gBACAnE,KAAKiD,mBAAqB,EAAI,EAAIjD,KAAKiD,oBAEzCgB,aAAaE,QAAQ,WAAYnE,KAAKyC,MAAME,UAC5CsB,aAAaE,QAAQ,SAAUnE,KAAKyC,MAAMI,WA1BhD,CAAAtC,IAAA,oBAAAC,MAAA,WAsCsB,IAAA8D,EAAAtE,KAClBA,KAAKyD,aACDQ,aAAaM,QAAQ,cACvBvE,KAAKmD,SAAS,CAAER,UAAU,IAC1B3C,KAAKmD,SAAS,CAAE3C,MAAOgE,OAAOP,aAAaM,QAAQ,aAEjDN,aAAaM,QAAQ,cACvBvE,KAAKmD,SAAS,CACZL,iBAAkB0B,OAAOP,aAAaM,QAAQ,gBAG9CN,aAAaM,QAAQ,WACvBvE,KAAKmD,SAAS,CAAEN,OAA0C,QAAlCoB,aAAaM,QAAQ,YAG/C7E,OAAO+E,iBAAiB,eAAgB,SAAAC,GACtCJ,EAAKK,yBAEPC,WAAW,WACTN,EAAKjB,gBACJ,KA1DP,CAAA9C,IAAA,SAAAC,MAAA,WAuFW,IAAAqE,EAAA7E,KACWA,KAAKyC,MAAfjC,MACR,OACEC,EAAAC,EAAAC,cAAA,WAMIX,KAAKyC,MAAME,SAsNXlC,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KACErD,EAAAC,EAAAC,cAAA,OAAKM,GAAG,aACNR,EAAAC,EAAAC,cAAA,OAAKa,UAAU,qBACbf,EAAAC,EAAAC,cAACmE,EAAA,aAAD,CACEtE,MAAOR,KAAK0B,MAAMgB,aAClBqC,KAAM,IAENC,kBAAkB,UAClBC,gBAAgB,UAChBC,WAAY,GACZC,cAAe,GACfC,YAAa,GACbC,cAAc,UACdC,aAAa,UACbC,YAAa,GACbC,IAAK,IACLC,IAAKzF,KAAK0B,MAAMgE,SAAW,IAC3BC,SAAU3F,KAAKkD,gBAInBzC,EAAAC,EAAAC,cAAA,KAAGM,GAAG,QAEJmD,KAAKC,MAAOrE,KAAKyC,MAAMjC,MAAQ,IAAO,IAAO,GAAK,QAKtDC,EAAAC,EAAAC,cAAA,OAAKM,GAAG,cACNR,EAAAC,EAAAC,cAAA,UACEa,UAAU,+BACVP,GAAG,GACHQ,QAAS,WACPoD,EAAK1B,SAAS,CAAER,UAAU,IAC1BkC,EAAK1B,SAAS,CAAEL,iBAAkB8C,KAAKC,QAGvChB,EAAKnD,MAAMoE,YAAY,cAR3B,SAaArF,EAAAC,EAAAC,cAAA,UAAQa,UAAU,8BAA8BP,GAAG,IAAnD,UA/PJR,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KACErD,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEC,YAcE/B,aAAaM,QAAQ,kBACrBN,aAAaM,QAAQ,WACa,QAAlCN,aAAaM,QAAQ,UACjBC,OAAOP,aAAaM,QAAQ,kBAC5BN,aAAaM,QAAQ,aAEnB,GADFH,KAAKC,MAAOrE,KAAKyC,MAAMjC,MAAQ,IAAO,IAAO,GAE3C,KACCoF,KAAKC,MAAQrB,OAAOP,aAAaM,QAAQ,eAC5C,EAEI,GADFH,KAAKC,MAAOrE,KAAKyC,MAAMjC,MAAQ,IAAO,IAAO,GAE3C,KACDoF,KAAKC,MAAQrB,OAAOP,aAAaM,QAAQ,eAC1C,EACgD,GAAlDH,KAAKC,MAAOrE,KAAKyC,MAAMjC,MAAQ,IAAO,IAAO,GAAU,IAiB7DyF,UAAU,WAEVC,SAAU,kBAAMrB,EAAK1B,SAAS,CAAEN,QAAQ,MAEvC,SAAAsD,KAAGC,MAAH,IAAUC,EAAVF,EAAUE,OAAQC,EAAlBH,EAAkBG,MAAoBC,GAAtCJ,EAAyBK,KAAzBL,EAA+BM,MAA/BN,EAAsCI,YAAtCJ,EAAkDO,EAAlD,OACCjG,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KAQErD,EAAAC,EAAAC,cAAA,OAAKM,GAAG,aACNR,EAAAC,EAAAC,cAAA,OAAKa,UAAU,oBAAoBP,GAAG,UAEpCR,EAAAC,EAAAC,cAACoF,EAAA,EAAMY,MAAP,CACEC,YAAa,SAAAC,GAAM,OACjBpG,EAAAC,EAAAC,cAACoF,EAAA,EAAMe,QAAP,CACEF,YAAa,SAAAG,GAAM,OACjBtG,EAAAC,EAAAC,cAACoF,EAAA,EAAMiB,QAAP,CACEJ,YAAa,SAAAK,GAAM,OACjBxG,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KACErD,EAAAC,EAAAC,cAACmE,EAAA,aAAD,CACEtE,MAIE,KAHU,GAATqG,EAAc,GACJ,GAATE,EACAE,GAGJlC,KAAM,IAENC,kBAAkB,UAClBC,gBAAgB,UAChBC,WAAY,EACZC,cAAe,GACfC,YAAa,GACbC,cAAc,UACdC,aAAa,UACbC,YAAa,GACbC,IAAK,EACLC,IAIE,GAHArB,KAAKC,MACFQ,EAAKpC,MAAMjC,MAAQ,IAAO,IAAO,GAGpC,IAEFmF,SAAUd,EAAK3B,aACfgE,UAAU,IAGG,WAAdX,GACU,GAAVU,GACW,GAAVJ,GACU,GAAVE,EACAtG,EAAAC,EAAAC,cAAA,KAAGM,GAAG,kBAAN,aAEAR,EAAAC,EAAAC,cAAA,KAAGM,GAAG,QACHgG,GAAU,GACXJ,GAAU,GACVE,GAAU,EACNE,EAAS,GACE,GAATJ,EACAE,EACA,KAEAE,EACS,GAATJ,EACAE,EACA,IACAE,EACF,IAGPpC,EAAKpB,WACU,WAAd8C,EACI,YACAU,GAAU,GACVJ,GAAU,GACVE,GAAU,EACVE,EAAS,GACE,GAATJ,EACAE,EACA,KAEAE,EACS,GAATJ,EAAcE,EAAS,IAAME,EAC/B,IAELpC,EAAKd,wBAIF,KAHQ,GAAT8C,EAAc,GACJ,GAATE,EACAE,gBAatBxG,EAAAC,EAAAC,cAAA,UACEwG,MAAO,CAAEC,QAAS,QAClBnG,GAAG,sBACHQ,QAAS6E,IAGX7F,EAAAC,EAAAC,cAAA,OAAKM,GAAG,cACJ4D,EAAKpC,MAAMI,OAcXpC,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KACErD,EAAAC,EAAAC,cAAA,UACEa,UAAU,+BACVP,GAAG,GACHQ,QAAS4E,GAHX,WAdF5F,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KACErD,EAAAC,EAAAC,cAAA,UACEa,UAAU,+BACVP,GAAG,eACHQ,QAAS,WACP6E,IACAzB,EAAK1B,SAAS,CAAEN,QAAQ,MAL5B,UAuBJpC,EAAAC,EAAAC,cAAA,UACEa,UAAU,8BACVP,GAAG,GACHQ,QAAS,WACPoD,EAAK1B,SAAS,CAAER,UAAU,IAC1BkC,EAAK1B,SAAS,CAAE3C,MAAOqE,EAAKnD,MAAMgB,eAClCmC,EAAK1B,SAAS,CAAEL,iBAAkB,IAClC+B,EAAK1B,SAAS,CAAEN,QAAQ,IACxBgC,EAAKpB,aACLoB,EAAKnD,MAAM2F,WAAW,YAEtBpD,aAAaC,WAAW,WACxBD,aAAaC,WAAW,aACxBD,aAAaC,WAAW,SACxBD,aAAaC,WAAW,iBACxBD,aAAaC,WAAW,YACxBD,aAAaC,WAAW,YAhB5B,kBA3RpBnC,EAAA,CAAsCD,aC6WvBC,EA7Wf,SAAAlC,GAAA,SAAAkC,IAAA,IAAAC,EAAAC,EAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,GAAA,QAAAG,EAAA9B,UAAA+B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAlC,UAAAkC,GAAA,OAAAL,EAAAnC,OAAAG,EAAA,EAAAH,CAAAE,MAAAgC,EAAAlC,OAAAI,EAAA,EAAAJ,CAAAiC,IAAAQ,KAAApC,MAAA6B,EAAA,CAAAhC,MAAAwC,OAAAJ,MACEK,MAAQ,CACNjC,MAAOyB,EAAKP,MAAMgB,aAClBC,UAAU,EACVC,gBAAiB,EACjBC,QAAQ,EACRC,iBAAkB,EAClBC,iBAAiB,EACjBC,cAAe,GARnBf,EAUEgB,mBAAqB,EAVvBhB,EAWEiB,aAAe,SAAA1C,GACbyB,EAAKkB,SAAS,CAAE3C,WAZpByB,EAqCEmB,mBAAqB,aArCvBnB,EA6DEoB,aAAe,WACTpB,EAAKQ,MAAMI,SAAWZ,EAAKQ,MAAME,UACnCW,SAASC,eAAe,uBAAuBC,SA/DrDvB,EAkEEwB,WAAa,SAAAC,GACPzB,EAAKP,MAAMiC,cACZ1B,EAAKQ,MAAME,SAKRiB,IAASC,OACPpD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,uBACAR,SAASC,eAAe,UAN1BK,IAASC,OACPpD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KAAiBJ,GACjBJ,SAASC,eAAe,UAO9BK,IAASC,OACPpD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,uBACAR,SAASC,eAAe,WAhFhCtB,EAoFE8B,wBAA0B,SAAAC,GACxB/B,EAAKgB,mBAAqBe,GArF9B/B,EAAA,OAAAnC,OAAAO,EAAA,EAAAP,CAAAiC,EAAAlC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAiC,EAAA,EAAAxB,IAAA,uBAAAC,MAAA,WAeSR,KAAKyC,MAAME,UAcdsB,aAAaC,WAAW,WACxBD,aAAaC,WAAW,aACxBD,aAAaC,WAAW,SACxBD,aAAaC,WAAW,iBACxBD,aAAaC,WAAW,YACxBD,aAAaC,WAAW,YAlBxBD,aAAaE,QAAQ,YAAanE,KAAKyC,MAAMK,kBAC7CmB,aAAaE,QACX,QACkD,GAAlDC,KAAKC,MAAOrE,KAAKyC,MAAMjC,MAAQ,IAAO,IAAO,GAAU,KAEzDyD,aAAaE,QACX,gBACAnE,KAAKiD,mBAAqB,EAAI,EAAIjD,KAAKiD,oBAEzCgB,aAAaE,QAAQ,WAAYnE,KAAKyC,MAAME,UAC5CsB,aAAaE,QAAQ,SAAUnE,KAAKyC,MAAMI,WA1BhD,CAAAtC,IAAA,oBAAAC,MAAA,WAuCsB,IAAA8D,EAAAtE,KAClBA,KAAKyD,aACDQ,aAAaM,QAAQ,cACvBvE,KAAKmD,SAAS,CAAER,UAAU,IAC1B3C,KAAKmD,SAAS,CAAE3C,MAAOgE,OAAOP,aAAaM,QAAQ,aAEjDN,aAAaM,QAAQ,cACvBvE,KAAKmD,SAAS,CACZL,iBAAkB0B,OAAOP,aAAaM,QAAQ,gBAG9CN,aAAaM,QAAQ,WACvBvE,KAAKmD,SAAS,CAAEN,OAA0C,QAAlCoB,aAAaM,QAAQ,YAG/C7E,OAAO+E,iBAAiB,eAAgB,SAAAC,GACtCJ,EAAKK,yBAEPC,WAAW,WACTN,EAAKjB,gBACJ,KA3DP,CAAA9C,IAAA,SAAAC,MAAA,WAwFW,IAAAqE,EAAA7E,KACWA,KAAKyC,MAAfjC,MACR,OACEC,EAAAC,EAAAC,cAAA,WAMIX,KAAKyC,MAAME,SAuNXlC,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KACErD,EAAAC,EAAAC,cAAA,OAAKM,GAAG,aACNR,EAAAC,EAAAC,cAAA,OAAKa,UAAU,qBACbf,EAAAC,EAAAC,cAACmE,EAAA,aAAD,CACEtE,MAAOR,KAAK0B,MAAMgB,aAClBqC,KAAM,IAENC,kBAAkB,UAClBC,gBAAgB,UAChBC,WAAY,GACZC,cAAe,GACfC,YAAa,GACbC,cAAc,UACdC,aAAa,UACbC,YAAa,GACbC,IAAK,IACLC,IAAKzF,KAAK0B,MAAMgE,SAAW,IAC3BC,SAAU3F,KAAKkD,gBAInBzC,EAAAC,EAAAC,cAAA,KAAGM,GAAG,QAEJmD,KAAKC,MAAOrE,KAAKyC,MAAMjC,MAAQ,IAAO,IAAO,GAAK,QAKtDC,EAAAC,EAAAC,cAAA,OAAKM,GAAG,cACNR,EAAAC,EAAAC,cAAA,UACEa,UAAU,+BACVP,GAAG,GACHQ,QAAS,WACPoD,EAAK1B,SAAS,CAAER,UAAU,IAC1BkC,EAAK1B,SAAS,CAAEL,iBAAkB8C,KAAKC,QAGvChB,EAAKnD,MAAMoE,YAAY,WAR3B,SAaArF,EAAAC,EAAAC,cAAA,UAAQa,UAAU,8BAA8BP,GAAG,IAAnD,UAhQJR,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KACErD,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEC,YAcE/B,aAAaM,QAAQ,kBACrBN,aAAaM,QAAQ,WACa,QAAlCN,aAAaM,QAAQ,UACjBC,OAAOP,aAAaM,QAAQ,kBAC5BN,aAAaM,QAAQ,aAEnB,GADFH,KAAKC,MAAOrE,KAAKyC,MAAMjC,MAAQ,IAAO,IAAO,GAE3C,KACCoF,KAAKC,MAAQrB,OAAOP,aAAaM,QAAQ,eAC5C,EAEI,GADFH,KAAKC,MAAOrE,KAAKyC,MAAMjC,MAAQ,IAAO,IAAO,GAE3C,KACDoF,KAAKC,MAAQrB,OAAOP,aAAaM,QAAQ,eAC1C,EACgD,GAAlDH,KAAKC,MAAOrE,KAAKyC,MAAMjC,MAAQ,IAAO,IAAO,GAAU,IAiB7DyF,UAAU,WAEVC,SAAU,kBAAMrB,EAAK1B,SAAS,CAAEN,QAAQ,MAGvC,SAAAsD,KAAGC,MAAH,IAAUC,EAAVF,EAAUE,OAAQC,EAAlBH,EAAkBG,MAAoBC,GAAtCJ,EAAyBK,KAAzBL,EAA+BM,MAA/BN,EAAsCI,YAAtCJ,EAAkDO,EAAlD,OACCjG,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KAQErD,EAAAC,EAAAC,cAAA,OAAKM,GAAG,aACNR,EAAAC,EAAAC,cAAA,OAAKa,UAAU,oBAAoBP,GAAG,UAEpCR,EAAAC,EAAAC,cAACoF,EAAA,EAAMY,MAAP,CACEC,YAAa,SAAAC,GAAM,OACjBpG,EAAAC,EAAAC,cAACoF,EAAA,EAAMe,QAAP,CACEF,YAAa,SAAAG,GAAM,OACjBtG,EAAAC,EAAAC,cAACoF,EAAA,EAAMiB,QAAP,CACEJ,YAAa,SAAAK,GAAM,OACjBxG,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KACErD,EAAAC,EAAAC,cAACmE,EAAA,aAAD,CACEtE,MAIE,KAHU,GAATqG,EAAc,GACJ,GAATE,EACAE,GAGJlC,KAAM,IAENC,kBAAkB,UAClBC,gBAAgB,UAChBC,WAAY,EACZC,cAAe,GACfC,YAAa,GACbC,cAAc,UACdC,aAAa,UACbC,YAAa,GACbC,IAAK,EACLC,IAIE,GAHArB,KAAKC,MACFQ,EAAKpC,MAAMjC,MAAQ,IAAO,IAAO,GAGpC,IAEFmF,SAAUd,EAAK3B,aACfgE,UAAU,IAGG,WAAdX,GACU,GAAVU,GACW,GAAVJ,GACU,GAAVE,EACAtG,EAAAC,EAAAC,cAAA,KAAGM,GAAG,kBAAN,aAEAR,EAAAC,EAAAC,cAAA,KAAGM,GAAG,QACHgG,GAAU,GACXJ,GAAU,GACVE,GAAU,EACNE,EAAS,GACE,GAATJ,EACAE,EACA,KAEAE,EACS,GAATJ,EACAE,EACA,IACAE,EACF,IAGPpC,EAAKpB,WACU,WAAd8C,EACI,YACAU,GAAU,GACVJ,GAAU,GACVE,GAAU,EACVE,EAAS,GACE,GAATJ,EACAE,EACA,KAEAE,EACS,GAATJ,EAAcE,EAAS,IAAME,EAC/B,IAELpC,EAAKd,wBAIF,KAHQ,GAAT8C,EAAc,GACJ,GAATE,EACAE,gBAatBxG,EAAAC,EAAAC,cAAA,UACEwG,MAAO,CAAEC,QAAS,QAClBnG,GAAG,sBACHQ,QAAS6E,IAGX7F,EAAAC,EAAAC,cAAA,OAAKM,GAAG,cACJ4D,EAAKpC,MAAMI,OAcXpC,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KACErD,EAAAC,EAAAC,cAAA,UACEa,UAAU,+BACVP,GAAG,GACHQ,QAAS4E,GAHX,WAdF5F,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,KACErD,EAAAC,EAAAC,cAAA,UACEa,UAAU,+BACVP,GAAG,eACHQ,QAAS,WACP6E,IACAzB,EAAK1B,SAAS,CAAEN,QAAQ,MAL5B,UAuBJpC,EAAAC,EAAAC,cAAA,UACEa,UAAU,8BACVP,GAAG,GACHQ,QAAS,WACPoD,EAAK1B,SAAS,CAAER,UAAU,IAC1BkC,EAAK1B,SAAS,CAAE3C,MAAOqE,EAAKnD,MAAMgB,eAClCmC,EAAK1B,SAAS,CAAEL,iBAAkB,IAClC+B,EAAK1B,SAAS,CAAEN,QAAQ,IACxBgC,EAAKpB,aACLoB,EAAKnD,MAAM2F,WAAW,YAEtBpD,aAAaC,WAAW,WACxBD,aAAaC,WAAW,aACxBD,aAAaC,WAAW,SACxBD,aAAaC,WAAW,iBACxBD,aAAaC,WAAW,YACxBD,aAAaC,WAAW,YAhB5B,kBA7RpBnC,EAAA,CAAsCD,8BCQvBwF,SAff,SAAAzH,GAAA,SAAAyH,IAAA,OAAAxH,OAAAC,EAAA,EAAAD,CAAAE,KAAAsH,GAAAxH,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwH,GAAAnH,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAwH,EAAAzH,GAAAC,OAAAQ,EAAA,EAAAR,CAAAwH,EAAA,EAAA/G,IAAA,SAAAC,MAAA,WAEI,OACEC,EAAAC,EAAAC,cAAA,OAAKM,GAAG,YACRR,EAAAC,EAAAC,cAAA,MAAIM,GAAG,aACLR,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CAAO8G,OAAQ,UAAWC,SAAS,EAAMxG,GAAG,gBAC5CR,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CAAO8G,OAAQ,IAAKC,SAAS,EAAMxG,GAAG,gBACtCR,EAAAC,EAAAC,cAAA,OAAKwG,MAAO,CAACO,MAAQ,WAEtBjH,EAAAC,EAAAC,cAAA,MAAIM,GAAG,aAAYR,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CAAO8G,OAAQ,uBAAwBC,SAAS,UAT1EH,EAAA,CAA0BxF,uCCqCX6F,EArCf,SAAA9H,GAAA,SAAA8H,IAAA,OAAA7H,OAAAC,EAAA,EAAAD,CAAAE,KAAA2H,GAAA7H,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6H,GAAAxH,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAA6H,EAAA9H,GAAAC,OAAAQ,EAAA,EAAAR,CAAA6H,EAAA,EAAApH,IAAA,SAAAC,MAAA,WAEI,OACEC,EAAAC,EAAAC,cAAA,OAAKM,GAAG,mBACNR,EAAAC,EAAAC,cAAA,MAAIM,GAAG,YAAP,SACAR,EAAAC,EAAAC,cAAA,OACEiH,IAAKC,IACLC,IAAI,SACJrG,QAASzB,KAAK0B,MAAMqG,SACpB9G,GAAG,kBAGLR,EAAAC,EAAAC,cAAA,OAAKa,UAAU,eACff,EAAAC,EAAAC,cAAA,OAAKa,UAAU,mCACbf,EAAAC,EAAAC,cAAA,MAAIa,UAAU,eAAd,iBACAf,EAAAC,EAAAC,cAAA,mMAMFF,EAAAC,EAAAC,cAAA,OAAKa,UAAU,mCACbf,EAAAC,EAAAC,cAAA,MAAIa,UAAU,eAAd,4BACAf,EAAAC,EAAAC,cAAA,+YAvBVgH,EAAA,CAA2B7F,+DC8HZkG,EA5Hf,SAAAnI,GAAA,SAAAmI,IAAA,IAAAhG,EAAAC,EAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgI,GAAA,QAAA9F,EAAA9B,UAAA+B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAlC,UAAAkC,GAAA,OAAAL,EAAAnC,OAAAG,EAAA,EAAAH,CAAAE,MAAAgC,EAAAlC,OAAAI,EAAA,EAAAJ,CAAAkI,IAAAzF,KAAApC,MAAA6B,EAAA,CAAAhC,MAAAwC,OAAAJ,MACEK,MAAQ,CACNwF,iBAAkBhG,EAAKP,MAAMuG,iBAC7BC,cAAejG,EAAKP,MAAMwG,eAH9BjG,EAYEkG,YAAc,WACZvD,WAAW,WACT3C,EAAKmG,uBACJ,GACHxD,WAAW,WACT3C,EAAKoG,uBACJ,IAlBPpG,EAqBEmG,oBAAsB,WACpBnG,EAAKP,MAAM4G,QAAQC,KAAK,UAtB5BtG,EAwBEoG,oBAAsB,WACpBpG,EAAKP,MAAM4G,QAAQE,QAAQvG,EAAKP,MAAM+G,SAASC,WAzBnDzG,EA2BE0G,aAAe,WACb1G,EAAKkB,SAAS,CAAE8E,iBAAkB,KAClChG,EAAKkB,SAAS,CAAE+E,cAAe,MA7BnCjG,EAAA,OAAAnC,OAAAO,EAAA,EAAAP,CAAAkI,EAAAnI,GAAAC,OAAAQ,EAAA,EAAAR,CAAAkI,EAAA,EAAAzH,IAAA,2BAAAC,MAAA,SAK2BoI,GACvB5I,KAAKmD,SAAS,CAAE8E,iBAAkBW,EAAEC,OAAOrI,UAN/C,CAAAD,IAAA,wBAAAC,MAAA,SASwBoI,GACpB5I,KAAKmD,SAAS,CAAE+E,cAAeU,EAAEC,OAAOrI,UAV5C,CAAAD,IAAA,SAAAC,MAAA,WAgCW,IAAA8D,EAAAtE,KACP,OACES,EAAAC,EAAAC,cAAA,OAAKM,GAAG,qBACNR,EAAAC,EAAAC,cAAA,MAAIM,GAAG,cAAP,YACAR,EAAAC,EAAAC,cAAA,OACEiH,IAAKC,IACLC,IAAI,SACJrG,QAASzB,KAAK0B,MAAMqG,SACpB9G,GAAG,kBAELR,EAAAC,EAAAC,cAAA,OAAKa,UAAU,eACff,EAAAC,EAAAC,cAAA,OAAKa,UAAU,sBACbf,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAM7H,GAAG,eAAe8H,SAAU/I,KAAK0B,MAAMsH,cAC3CvI,EAAAC,EAAAC,cAACmI,EAAA,EAAKG,MAAN,CAAYC,GAAIC,KACd1I,EAAAC,EAAAC,cAACmI,EAAA,EAAKM,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG9H,UAAU,cAApC,sBAGAf,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAKD,GAAI,EAAG9H,UAAU,aAAaP,GAAG,iBACpCR,EAAAC,EAAAC,cAAC6I,EAAA9I,EAAD,CACE+I,QAASzJ,KAAK0B,MAAMiC,cACpBgC,SAAU3F,KAAK0B,MAAMgI,mBACrBC,QAAQ,UACRC,SAAS,UACTC,cAAc,UACdC,eAAgB,GAChBC,eAAe,EACfC,aAAa,EACbC,UAAU,iCACVC,gBAAgB,sCAChBC,OAAQ,GACRC,MAAO,OAIb3J,EAAAC,EAAAC,cAACmI,EAAA,EAAKG,MAAN,CAAYC,GAAIC,KACd1I,EAAAC,EAAAC,cAACmI,EAAA,EAAKM,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,yBAGA7I,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAKD,GAAI,EAAG9H,UAAU,cACpBf,EAAAC,EAAAC,cAACmI,EAAA,EAAKuB,QAAN,CACEC,KAAK,SACLC,YAAY,gBACZC,KAAK,eACLC,UAAQ,EACRjK,MAAOR,KAAKyC,MAAMwF,iBAClBtC,SAAU,SAAAnF,GAAK,OAAI8D,EAAKoG,yBAAyBlK,QAIvDC,EAAAC,EAAAC,cAACmI,EAAA,EAAKG,MAAN,CAAYC,GAAIC,KACd1I,EAAAC,EAAAC,cAACmI,EAAA,EAAKM,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,sBAGA7I,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAKD,GAAI,EAAG9H,UAAU,cACpBf,EAAAC,EAAAC,cAACmI,EAAA,EAAKuB,QAAN,CACEC,KAAK,SACLC,YAAY,aACZC,KAAK,YACLC,UAAQ,EACRjK,MAAOR,KAAKyC,MAAMyF,cAClBvC,SAAU,SAAAnF,GAAK,OAAI8D,EAAKqG,sBAAsBnK,QAIpDC,EAAAC,EAAAC,cAAA,SACE2J,KAAK,SACLnD,MAAO,CAAEC,QAAS,QAClBnG,GAAG,0BAELR,EAAAC,EAAAC,cAAA,OAAKa,UAAU,sBACbf,EAAAC,EAAAC,cAAA,UACEc,QAASzB,KAAKmI,YACd3G,UAAU,+BAFZ,UAMAf,EAAAC,EAAAC,cAAA,UACE2J,KAAK,QACL7I,QAASzB,KAAK2I,aACdnH,UAAU,8BAHZ,SAOAf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,uBAnH7BwG,EAAA,CAA6BlG,aC+Ed8I,SAjFf,SAAA/K,GAAA,SAAA+K,IAAA,IAAA5I,EAAAC,EAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4K,GAAA,QAAA1I,EAAA9B,UAAA+B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAlC,UAAAkC,GAAA,OAAAL,EAAAnC,OAAAG,EAAA,EAAAH,CAAAE,MAAAgC,EAAAlC,OAAAI,EAAA,EAAAJ,CAAA8K,IAAArI,KAAApC,MAAA6B,EAAA,CAAAhC,MAAAwC,OAAAJ,MA4BEyI,QAAU,WACkB,YAAtB5I,EAAKP,MAAMoJ,QAEbpL,OAAOqL,MAAM,+CAEbzH,SACGC,eAAe,gBACfyH,UAAUC,IAAI,0BACjB3H,SACGC,eAAe,mBACfyH,UAAUE,OAAO,0BACpB5H,SACGC,eAAe,eACfyH,UAAUE,OAAO,0BAEpBjJ,EAAKP,MAAM4G,QAAQC,KAAK,YA3C9BtG,EA8CEkJ,WAAa,WACe,SAAtBlJ,EAAKP,MAAMoJ,QAEbpL,OAAOqL,MAAM,qDAEbzH,SACGC,eAAe,gBACfyH,UAAUE,OAAO,0BACpB5H,SACGC,eAAe,mBACfyH,UAAUC,IAAI,0BACjB3H,SACGC,eAAe,eACfyH,UAAUE,OAAO,0BAEpBjJ,EAAKP,MAAM4G,QAAQE,QAAQ,OA7DjCvG,EAgEEmJ,OAAS,WAEL9H,SACGC,eAAe,gBACfyH,UAAUE,OAAO,0BACpB5H,SACGC,eAAe,mBACfyH,UAAUE,OAAO,0BACpB5H,SACGC,eAAe,eACfyH,UAAUC,IAAI,0BAEjBhJ,EAAKP,MAAM4G,QAAQE,QAAQ,UA5EjCvG,EAAA,OAAAnC,OAAAO,EAAA,EAAAP,CAAA8K,EAAA/K,GAAAC,OAAAQ,EAAA,EAAAR,CAAA8K,EAAA,EAAArK,IAAA,SAAAC,MAAA,WAEI,OACEC,EAAAC,EAAAC,cAAA,OAAKM,GAAG,wBACNR,EAAAC,EAAAC,cAAA,OAAKM,GAAG,kBACNR,EAAAC,EAAAC,cAAA,UACEa,UAAU,aACVP,GAAG,kBACHQ,QAASzB,KAAKmL,YAHhB,YAOA1K,EAAAC,EAAAC,cAAA,UACEa,UAAU,aACVP,GAAG,eACHQ,QAASzB,KAAK6K,SAHhB,SAOEpK,EAAAC,EAAAC,cAAA,UAAQa,UAAU,aAAaP,GAAG,cAClCQ,QAASzB,KAAKoL,QADd,cAnBZR,EAAA,CAA+B9I,cCUhBuJ,SAXf,SAAAxL,GAAA,SAAAwL,IAAA,OAAAvL,OAAAC,EAAA,EAAAD,CAAAE,KAAAqL,GAAAvL,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuL,GAAAlL,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAuL,EAAAxL,GAAAC,OAAAQ,EAAA,EAAAR,CAAAuL,EAAA,EAAA9K,IAAA,SAAAC,MAAA,WAEQ,OACIC,EAAAC,EAAAC,cAAA,OAAKM,GAAG,kBAEJR,EAAAC,EAAAC,cAAA,iCALhB0K,EAAA,CAAiCvJ,8BCwJlBwJ,EAzIf,SAAAzL,GAAA,SAAAyL,IAAA,IAAAtJ,EAAAC,EAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsL,GAAA,QAAApJ,EAAA9B,UAAA+B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAlC,UAAAkC,GAAA,OAAAL,EAAAnC,OAAAG,EAAA,EAAAH,CAAAE,MAAAgC,EAAAlC,OAAAI,EAAA,EAAAJ,CAAAwL,IAAA/I,KAAApC,MAAA6B,EAAA,CAAAhC,MAAAwC,OAAAJ,MACEK,MAAQ,CACNkF,OAAO,EACPK,SAAS,EACTrE,eAAeM,aAAaM,QAAQ,kBACS,QAAzCN,aAAaM,QAAQ,iBAEzB0D,iBAAkBhE,aAAaM,QAAQ,qBAAuB,GAC9D2D,cAAejE,aAAaM,QAAQ,kBAAoB,GACxDuG,QAAS7G,aAAaM,QAAQ,YAAc,IAThDtC,EAsBEsJ,aAAe,WACbtJ,EAAKkB,SAAS,CAAEwE,OAAO,IACvB1F,EAAKkB,SAAS,CAAE6E,SAAS,KAxB7B/F,EA0BEuJ,iBAAmB,WACjBvJ,EAAKkB,SAAS,CAAEwE,OAAO,IACvB1F,EAAKkB,SAAS,CAAE6E,SAAS,IACzB1E,SAASmI,uBAAuB,kBAAkB,GAAGjI,SA7BzDvB,EA+BEyJ,mBAAqB,WACnBzJ,EAAKkB,SAAS,CAAE6E,SAAS,IACzB/F,EAAKkB,SAAS,CAAEwE,OAAO,IACvBrE,SAASmI,uBAAuB,kBAAkB,GAAGjI,SAlCzDvB,EAoCEyH,mBAAqB,SAAAD,GACnBxH,EAAKkB,SAAS,CAAEQ,cAAe8F,KArCnCxH,EAuCE0J,iBAAmB,SAAA/C,GACjBA,EAAEgD,iBACF3J,EAAKkB,SAAS,CAAE8E,iBAAkBW,EAAEC,OAAO,GAAGrI,QAC9CyB,EAAKkB,SAAS,CAAE+E,cAAeU,EAAEC,OAAO,GAAGrI,QAC3CyB,EAAKkB,SAAS,CAAEwE,OAAO,IACvB1F,EAAKkB,SAAS,CAAE6E,SAAS,KA5C7B/F,EA+CE6D,YAAc,SAAAtF,GACZyB,EAAKkB,SAAS,CAAE2H,QAAStK,KAhD7ByB,EAkDEoF,WAAa,SAAA7G,GACXyB,EAAKkB,SAAS,CAAE2H,QAAS,MAnD7B7I,EAAA,OAAAnC,OAAAO,EAAA,EAAAP,CAAAwL,EAAAzL,GAAAC,OAAAQ,EAAA,EAAAR,CAAAwL,EAAA,EAAA/K,IAAA,uBAAAC,MAAA,WAYIyD,aAAaE,QAAQ,mBAAoBnE,KAAKyC,MAAMwF,kBACpDhE,aAAaE,QAAQ,gBAAiBnE,KAAKyC,MAAMyF,eACjDjE,aAAaE,QAAQ,gBAAiBnE,KAAKyC,MAAMkB,eACjDM,aAAaE,QAAQ,UAAWnE,KAAKyC,MAAMqI,WAf/C,CAAAvK,IAAA,oBAAAC,MAAA,WAiBsB,IAAA8D,EAAAtE,KAClBN,OAAO+E,iBAAiB,eAAgB,SAAAC,GACtCJ,EAAKK,2BAnBX,CAAApE,IAAA,SAAAC,MAAA,WAqDW,IAAAqE,EAAA7E,KACP,OACES,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAACmL,EAAD,CACEjK,aAAc7B,KAAKwL,iBACnB7J,eAAgB3B,KAAK0L,qBAEtB1L,KAAKyC,MAAMkF,MACVlH,EAAAC,EAAAC,cAACoL,EAAD,CAAOhE,SAAU/H,KAAKuL,eAEtB9K,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,MAED9D,KAAKyC,MAAMuF,QACVvH,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CACEnI,OAAQ,SAAAnC,GAAK,OACXjB,EAAAC,EAAAC,cAACsL,EAADnM,OAAAoM,OAAA,CACEnE,SAAUlD,EAAK0G,aACfvC,aAAcnE,EAAK8G,kBACfjK,EAHN,CAIEuG,iBAAkBpD,EAAKpC,MAAMwF,iBAC7BC,cAAerD,EAAKpC,MAAMyF,cAC1BvE,cAAekB,EAAKpC,MAAMkB,cAC1B+F,mBAAoB7E,EAAK6E,yBAK/BjJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,SAAP,MAGFrD,EAAAC,EAAAC,cAAA,OACEM,GAAIjB,KAAKyC,MAAMkF,OAAS3H,KAAKyC,MAAMuF,QAAU,oBAAsB,IAEnEvH,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CACEnI,OAAQ,SAAAnC,GAAK,OACXjB,EAAAC,EAAAC,cAACwL,EAADrM,OAAAoM,OAAA,GAAexK,EAAf,CAAsBoJ,QAASjG,EAAKpC,MAAMqI,cAG9CrK,EAAAC,EAAAC,cAACqL,EAAA,EAAD,KACEvL,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CACEI,OAAK,EACLC,KAAK,IACLxI,OAAQ,SAAAnC,GAAK,MACW,SAAtBmD,EAAKpC,MAAMqI,QACTrK,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAUM,GAAG,WAEb7L,EAAAC,EAAAC,cAAC4L,EAAD,CACE7J,aAA4C,GAA9BmC,EAAKpC,MAAMwF,iBAAwB,IACjDvC,SAAwC,EAA9Bb,EAAKpC,MAAMwF,iBAAuB,GAAK,IACjDtE,cAAekB,EAAKpC,MAAMkB,cAC1BmC,YAAajB,EAAKiB,YAClBuB,WAAYxC,EAAKwC,gBAMzB5G,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CACEI,OAAK,EACLC,KAAK,SACLxI,OAAQ,SAAAnC,GAAK,MACW,YAAtBmD,EAAKpC,MAAMqI,QACTrK,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAUM,GAAG,MAEb7L,EAAAC,EAAAC,cAAC6L,EAAD,CACE9J,aAAyC,GAA3BmC,EAAKpC,MAAMyF,cAAqB,IAC9CxC,SAAqC,EAA3Bb,EAAKpC,MAAMyF,cAAoB,GAAK,IAC9CvE,cAAekB,EAAKpC,MAAMkB,cAC1BmC,YAAajB,EAAKiB,YAClBuB,WAAYxC,EAAKwC,gBAMzB5G,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAOI,OAAK,EAACC,KAAK,QAAQxI,OAAQ,SAAAnC,GAAK,OAAIjB,EAAAC,EAAAC,cAAC8L,EAAD,SAC3ChM,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAOnI,OAAQ,SAAAnC,GAAK,OAAIjB,EAAAC,EAAAC,cAAC+L,EAAD,gBAjIpCpB,EAAA,CAA0BxJ,aCFX6K,MAVf,WACE,OACElM,EAAAC,EAAAC,cAAA,OAAKa,UAAU,OACbf,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAOY,UAAWtB,OCENuB,QACW,cAA7BnN,OAAO+I,SAASqE,UAEe,UAA7BpN,OAAO+I,SAASqE,UAEhBpN,OAAO+I,SAASqE,SAASC,MACvB,2DCVNnJ,IAASC,OAAOpD,EAAAC,EAAAC,cAACqM,EAAD,MAAS1J,SAASC,eAAe,SDyH3C,kBAAmB0J,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.45818e50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cancel.e655bee7.svg\";","import React, { Component } from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\n\r\nimport \"./NavBar.css\";\r\nwindow.onhashchange = function() {\r\n};\r\nexport class NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar\r\n          collapseOnSelect\r\n          expand=\"lg\"\r\n          bg=\"light\"\r\n          variant=\"light\"\r\n          id=\"main-nav-bar\"\r\n        >\r\n          <Container>\r\n            <Navbar.Brand>Pomodoro Timer</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\" />\r\n              <Nav>\r\n                <div onClick={this.props.onSettingClick}>\r\n                  <Nav.Link>Settings</Nav.Link>\r\n                </div>\r\n\r\n                <div onClick={this.props.onAboutClick}>\r\n                  <Nav.Link>About</Nav.Link>\r\n                </div>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./CircularSelector.css\";\r\nimport { CircleSlider } from \"react-circle-slider\";\r\nimport Timer from \"react-compound-timer\";\r\nimport {\r\n \r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nexport class CircularSelector extends Component {\r\n  state = {\r\n    value: this.props.currentValue,\r\n    selector: true,\r\n    dataForProgress: 0,\r\n    paused: false,\r\n    TimestampOnStart: 0,\r\n    firstTimePaused: true,\r\n    remainingTime: 0\r\n  };\r\n  dataForProgressVar = 0;\r\n  handleChange = value => {\r\n    this.setState({ value });\r\n  };\r\n  componentWillUnmount() {\r\n    if (!this.state.selector) {\r\n      localStorage.setItem(\"Timestamp\", this.state.TimestampOnStart);\r\n      localStorage.setItem(\r\n        \"value\",\r\n        Math.floor((this.state.value / 1000 / 60) << 0) * 60 * 1000\r\n      );\r\n      localStorage.setItem(\r\n        \"remainingTime\",\r\n        this.dataForProgressVar < 0 ? 0 : this.dataForProgressVar\r\n      );\r\n      localStorage.setItem(\"selector\", this.state.selector);\r\n      localStorage.setItem(\"paused\", this.state.paused);\r\n    } else {\r\n      localStorage.removeItem(\"started\");\r\n      localStorage.removeItem(\"Timestamp\");\r\n      localStorage.removeItem(\"value\");\r\n      localStorage.removeItem(\"remainingTime\");\r\n      localStorage.removeItem(\"selector\");\r\n      localStorage.removeItem(\"paused\");\r\n    }\r\n  }\r\n  componentDidUpdate = () => {\r\n  };\r\n  componentDidMount() {\r\n    this.titleValue();\r\n    if (localStorage.getItem(\"selector\")) {\r\n      this.setState({ selector: false });\r\n      this.setState({ value: Number(localStorage.getItem(\"value\")) });\r\n    }\r\n    if (localStorage.getItem(\"Timestamp\")) {\r\n      this.setState({\r\n        TimestampOnStart: Number(localStorage.getItem(\"Timestamp\"))\r\n      });\r\n    }\r\n    if (localStorage.getItem(\"paused\")) {\r\n      this.setState({ paused: localStorage.getItem(\"paused\") == \"true\" });\r\n   \r\n    }\r\n    window.addEventListener(\"beforeunload\", ev => {\r\n      this.componentWillUnmount();\r\n    });\r\n    setTimeout(() => {\r\n      this.pauseOnStart();\r\n    }, 1);\r\n  }\r\n  pauseOnStart = () => {\r\n    if (this.state.paused && !this.state.selector) {\r\n      document.getElementById(\"paused-button-forjs\").click();\r\n    }\r\n  };\r\n  titleValue = time => {\r\n    if (this.props.switchChecked) {\r\n      !this.state.selector\r\n        ? ReactDOM.render(\r\n            <React.Fragment>{time}</React.Fragment>,\r\n            document.getElementById(\"title\")\r\n          )\r\n        : ReactDOM.render(\r\n            <React.Fragment>Pomodoro Timer</React.Fragment>,\r\n            document.getElementById(\"title\")\r\n          );\r\n    } else {\r\n      ReactDOM.render(\r\n        <React.Fragment>Pomodoro Timer</React.Fragment>,\r\n        document.getElementById(\"title\")\r\n      );\r\n    }\r\n  };\r\n  dataForProgressFunction = data => {\r\n    this.dataForProgressVar = data;\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <div>\r\n        {/* {localStorage.getItem(\"started\") == \"break\" ? (\r\n          <Redirect to=\"/break\" />\r\n        ) : (\r\n          <React.Fragment />\r\n        )} */}\r\n        {!this.state.selector ? (\r\n          <React.Fragment>\r\n            <Timer\r\n              initialTime={\r\n                //we are using math floor because our value slider has presition of milisecon and we only require presition of minutes if we consider millisecond precision ther it will overcount\r\n                //we require precision of minute because we are subtracting from selected values and selected values has presition of minutes\r\n                // (localStorage.getItem(\"Timestamp\")\r\n                //                         ? this.state.value -\r\n                //                         (Date.now() - Number(localStorage.getItem(\"Timestamp\")))\r\n                //                         : Math.floor((this.state.value / 1000 / 60) << 0) * 60 * 1000 >=\r\n                //                         0)\r\n                //                         ? localStorage.getItem(\"Timestamp\")\r\n                //                           ? this.state.value -\r\n                //                           (Date.now() - Number(localStorage.getItem(\"Timestamp\")))\r\n                //                           : this.state.value\r\n                //   : 0\r\n\r\n                localStorage.getItem(\"remainingTime\") &&\r\n                localStorage.getItem(\"paused\") &&\r\n                localStorage.getItem(\"paused\") == \"true\"\r\n                  ? Number(localStorage.getItem(\"remainingTime\"))\r\n                  : localStorage.getItem(\"Timestamp\")\r\n                  ? Math.floor((this.state.value / 1000 / 60) << 0) *\r\n                      60 *\r\n                      1000 -\r\n                      (Date.now() - Number(localStorage.getItem(\"Timestamp\"))) >\r\n                    0\r\n                    ? Math.floor((this.state.value / 1000 / 60) << 0) *\r\n                        60 *\r\n                        1000 -\r\n                      (Date.now() - Number(localStorage.getItem(\"Timestamp\")))\r\n                    : 0\r\n                  : Math.floor((this.state.value / 1000 / 60) << 0) * 60 * 1000\r\n\r\n                // (localStorage.getItem(\"Timestamp\")\r\n                // ? Math.floor((this.state.value / 1000 / 60) << 0) * 60 * 1000 -\r\n                //   (Date.now() - Number(localStorage.getItem(\"Timestamp\")))\r\n                // : Math.floor((this.state.value / 1000 / 60) << 0) * 60 * 1000 >=\r\n                //   0)\r\n                //   ? localStorage.getItem(\"Timestamp\")\r\n                //     ? Math.floor((this.state.value / 1000 / 60) << 0) *\r\n                //         60 *\r\n                //         1000 -\r\n                //       (Date.now() - Number(localStorage.getItem(\"Timestamp\")))\r\n                //     : Math.floor((this.state.value / 1000 / 60) << 0) *\r\n                //       60 *\r\n                //       1000\r\n                //   : 0\r\n              }\r\n              direction=\"backward\"\r\n              // startImmediately={false}\r\n              onResume={() => this.setState({ paused: false })}\r\n            >\r\n              {({ start, resume, pause, stop, reset, timerState, m }) => (\r\n                <React.Fragment>\r\n                  {/* <div>\r\n                  <Timer.Days /> days\r\n                  <Timer.Hours /> hours\r\n                  <Timer.Minutes /> minutes\r\n                  <Timer.Seconds /> seconds\r\n                  <Timer.Milliseconds /> milliseconds\r\n                </div> */}\r\n                  <div id=\"outer-div\">\r\n                    <div className=\"circular-selector\" id=\"rotate\">\r\n                      {/* <Timer.Hours  formatValue={valueM => ()}/> */}\r\n                      <Timer.Hours\r\n                        formatValue={valueH => (\r\n                          <Timer.Minutes\r\n                            formatValue={valueM => (\r\n                              <Timer.Seconds\r\n                                formatValue={valueS => (\r\n                                  <React.Fragment>\r\n                                    <CircleSlider\r\n                                      value={\r\n                                        (valueH * 60 * 60 +\r\n                                          valueM * 60 +\r\n                                          valueS) *\r\n                                        1000\r\n                                      }\r\n                                      size={400}\r\n                                      // showTooltip={true}\r\n                                      gradientColorFrom=\"#02C0E8\"\r\n                                      gradientColorTo=\"#01F0D1\"\r\n                                      knobRadius={0}\r\n                                      progressWidth={20}\r\n                                      circleWidth={15}\r\n                                      progressColor=\"#6656B6\"\r\n                                      tooltipColor=\"#6ab6e1\"\r\n                                      tooltipSize={20}\r\n                                      min={1}\r\n                                      max={\r\n                                        Math.floor(\r\n                                          (this.state.value / 1000 / 60) << 0\r\n                                        ) *\r\n                                        60 *\r\n                                        1000\r\n                                      }\r\n                                      onChange={this.handleChange}\r\n                                      disabled={true}\r\n                                    />\r\n\r\n                                    {timerState == \"STOPPED\" ||\r\n                                    (valueS == 0 &&\r\n                                      valueH == 0 &&\r\n                                      valueM == 0) ? (\r\n                                      <p id=\"time-completed\">COMPLETED</p>\r\n                                    ) : (\r\n                                      <p id=\"time\">\r\n                                        {valueS >= 0 &&\r\n                                        valueH >= 0 &&\r\n                                        valueM >= 0\r\n                                          ? valueS < 10\r\n                                            ? valueH * 60 +\r\n                                              valueM +\r\n                                              \":\" +\r\n                                              \"0\" +\r\n                                              valueS\r\n                                            : valueH * 60 +\r\n                                              valueM +\r\n                                              \":\" +\r\n                                              valueS\r\n                                          : \"\"}\r\n                                      </p>\r\n                                    )}\r\n                                    {this.titleValue(\r\n                                      timerState == \"STOPPED\"\r\n                                        ? \"COMPLETED\"\r\n                                        : valueS >= 0 &&\r\n                                          valueH >= 0 &&\r\n                                          valueM >= 0\r\n                                        ? valueS < 10\r\n                                          ? valueH * 60 +\r\n                                            valueM +\r\n                                            \":\" +\r\n                                            \"0\" +\r\n                                            valueS\r\n                                          : valueH * 60 + valueM + \":\" + valueS\r\n                                        : \"\"\r\n                                    )}\r\n                                    {this.dataForProgressFunction(\r\n                                      (valueH * 60 * 60 +\r\n                                        valueM * 60 +\r\n                                        valueS) *\r\n                                        1000\r\n                                    )}\r\n                                  </React.Fragment>\r\n                                )}\r\n                              />\r\n                            )}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <button\r\n                    style={{ display: \"none\" }}\r\n                    id=\"paused-button-forjs\"\r\n                    onClick={pause}\r\n                  />\r\n\r\n                  <div id=\"button-div\">\r\n                    {!this.state.paused ? (\r\n                      <React.Fragment>\r\n                        <button\r\n                          className=\"selector-button start-button\"\r\n                          id=\"pause-button\"\r\n                          onClick={() => {\r\n                            pause();\r\n                            this.setState({ paused: true });\r\n                          }}\r\n                        >\r\n                          Pause\r\n                        </button>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      <React.Fragment>\r\n                        <button\r\n                          className=\"selector-button start-button\"\r\n                          id=\"\"\r\n                          onClick={resume}\r\n                        >\r\n                          Resume\r\n                        </button>\r\n                      </React.Fragment>\r\n                    )}\r\n\r\n                    <button\r\n                      className=\"selector-button stop-button\"\r\n                      id=\"\"\r\n                      onClick={() => {\r\n                        this.setState({ selector: true });\r\n                        this.setState({ value: this.props.currentValue });\r\n                        this.setState({ TimestampOnStart: 0 });\r\n                        this.setState({ paused: false });\r\n                        this.titleValue();\r\n                        this.props.handleStop(\"pomodoro\");\r\n                        // localStorage.clear();\r\n                        localStorage.removeItem(\"started\");\r\n                        localStorage.removeItem(\"Timestamp\");\r\n                        localStorage.removeItem(\"value\");\r\n                        localStorage.removeItem(\"remainingTime\");\r\n                        localStorage.removeItem(\"selector\");\r\n                        localStorage.removeItem(\"paused\");\r\n                      }}\r\n                    >\r\n                      STOP\r\n                    </button>\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            </Timer>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <div id=\"outer-div\">\r\n              <div className=\"circular-selector\">\r\n                <CircleSlider\r\n                  value={this.props.currentValue}\r\n                  size={400}\r\n                  // showTooltip={true}\r\n                  gradientColorFrom=\"#02C0E8\"\r\n                  gradientColorTo=\"#01F0D1\"\r\n                  knobRadius={15}\r\n                  progressWidth={20}\r\n                  circleWidth={15}\r\n                  progressColor=\"#6656B6\"\r\n                  tooltipColor=\"#6ab6e1\"\r\n                  tooltipSize={20}\r\n                  min={1 * 60 * 1000}\r\n                  max={this.props.maxValue + 1 * 60 * 1000}\r\n                  onChange={this.handleChange}\r\n                  // disabled={true}\r\n                />\r\n              </div>\r\n              <p id=\"time\">\r\n                {// this.state.value\r\n                Math.floor((this.state.value / 1000 / 60) << 0) + \":\" + \"00\"\r\n                // Math.floor((this.state.value/1000) % 60)\r\n                }\r\n              </p>\r\n            </div>\r\n            <div id=\"button-div\">\r\n              <button\r\n                className=\"selector-button start-button\"\r\n                id=\"\"\r\n                onClick={() => {\r\n                  this.setState({ selector: false });\r\n                  this.setState({ TimestampOnStart: Date.now() });\r\n                  // localStorage.setItem(\"started\", \"pomodoro\");\r\n                  // this.setState({ started: \"pomodoro\" });\r\n                  this.props.handleStart(\"pomodoro\");\r\n                }}\r\n              >\r\n                START\r\n              </button>\r\n              <button className=\"selector-button stop-button\" id=\"\">\r\n                STOP\r\n              </button>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CircularSelector;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./CircularSelector.css\";\r\nimport { CircleSlider } from \"react-circle-slider\";\r\nimport Timer from \"react-compound-timer\";\r\nimport {\r\n \r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nexport class CircularSelector extends Component {\r\n  state = {\r\n    value: this.props.currentValue,\r\n    selector: true,\r\n    dataForProgress: 0,\r\n    paused: false,\r\n    TimestampOnStart: 0,\r\n    firstTimePaused: true,\r\n    remainingTime: 0\r\n  };\r\n  dataForProgressVar = 0;\r\n  handleChange = value => {\r\n    this.setState({ value });\r\n  };\r\n  componentWillUnmount() {\r\n    if (!this.state.selector) {\r\n      localStorage.setItem(\"Timestamp\", this.state.TimestampOnStart);\r\n      localStorage.setItem(\r\n        \"value\",\r\n        Math.floor((this.state.value / 1000 / 60) << 0) * 60 * 1000\r\n      );\r\n      localStorage.setItem(\r\n        \"remainingTime\",\r\n        this.dataForProgressVar < 0 ? 0 : this.dataForProgressVar\r\n      );\r\n      localStorage.setItem(\"selector\", this.state.selector);\r\n      localStorage.setItem(\"paused\", this.state.paused);\r\n    } else {\r\n      // localStorage.clear();\r\n      localStorage.removeItem(\"started\");\r\n      localStorage.removeItem(\"Timestamp\");\r\n      localStorage.removeItem(\"value\");\r\n      localStorage.removeItem(\"remainingTime\");\r\n      localStorage.removeItem(\"selector\");\r\n      localStorage.removeItem(\"paused\");\r\n    }\r\n  }\r\n  componentDidUpdate = () => {\r\n  };\r\n  componentDidMount() {\r\n    this.titleValue();\r\n    if (localStorage.getItem(\"selector\")) {\r\n      this.setState({ selector: false });\r\n      this.setState({ value: Number(localStorage.getItem(\"value\")) });\r\n    }\r\n    if (localStorage.getItem(\"Timestamp\")) {\r\n      this.setState({\r\n        TimestampOnStart: Number(localStorage.getItem(\"Timestamp\"))\r\n      });\r\n    }\r\n    if (localStorage.getItem(\"paused\")) {\r\n      this.setState({ paused: localStorage.getItem(\"paused\") == \"true\" });\r\n   \r\n    }\r\n    window.addEventListener(\"beforeunload\", ev => {\r\n      this.componentWillUnmount();\r\n    });\r\n    setTimeout(() => {\r\n      this.pauseOnStart();\r\n    }, 1);\r\n  }\r\n  pauseOnStart = () => {\r\n    if (this.state.paused && !this.state.selector) {\r\n      document.getElementById(\"paused-button-forjs\").click();\r\n    }\r\n  };\r\n  titleValue = time => {\r\n    if (this.props.switchChecked) {\r\n      !this.state.selector\r\n        ? ReactDOM.render(\r\n            <React.Fragment>{time}</React.Fragment>,\r\n            document.getElementById(\"title\")\r\n          )\r\n        : ReactDOM.render(\r\n            <React.Fragment>Pomodoro Timer</React.Fragment>,\r\n            document.getElementById(\"title\")\r\n          );\r\n    } else {\r\n      ReactDOM.render(\r\n        <React.Fragment>Pomodoro Timer</React.Fragment>,\r\n        document.getElementById(\"title\")\r\n      );\r\n    }\r\n  };\r\n  dataForProgressFunction = data => {\r\n    this.dataForProgressVar = data;\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <div>\r\n        {/* {localStorage.getItem(\"started\") == \"pomodoro\" ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <React.Fragment />\r\n        )} */}\r\n        {!this.state.selector ? (\r\n          <React.Fragment>\r\n            <Timer\r\n              initialTime={\r\n                //we are using math floor because our value slider has presition of milisecon and we only require presition of minutes if we consider millisecond precision ther it will overcount\r\n                //we require precision of minute because we are subtracting from selected values and selected values has presition of minutes\r\n                // (localStorage.getItem(\"Timestamp\")\r\n                //                         ? this.state.value -\r\n                //                         (Date.now() - Number(localStorage.getItem(\"Timestamp\")))\r\n                //                         : Math.floor((this.state.value / 1000 / 60) << 0) * 60 * 1000 >=\r\n                //                         0)\r\n                //                         ? localStorage.getItem(\"Timestamp\")\r\n                //                           ? this.state.value -\r\n                //                           (Date.now() - Number(localStorage.getItem(\"Timestamp\")))\r\n                //                           : this.state.value\r\n                //   : 0\r\n\r\n                localStorage.getItem(\"remainingTime\") &&\r\n                localStorage.getItem(\"paused\") &&\r\n                localStorage.getItem(\"paused\") == \"true\"\r\n                  ? Number(localStorage.getItem(\"remainingTime\"))\r\n                  : localStorage.getItem(\"Timestamp\")\r\n                  ? Math.floor((this.state.value / 1000 / 60) << 0) *\r\n                      60 *\r\n                      1000 -\r\n                      (Date.now() - Number(localStorage.getItem(\"Timestamp\"))) >\r\n                    0\r\n                    ? Math.floor((this.state.value / 1000 / 60) << 0) *\r\n                        60 *\r\n                        1000 -\r\n                      (Date.now() - Number(localStorage.getItem(\"Timestamp\")))\r\n                    : 0\r\n                  : Math.floor((this.state.value / 1000 / 60) << 0) * 60 * 1000\r\n\r\n                // (localStorage.getItem(\"Timestamp\")\r\n                // ? Math.floor((this.state.value / 1000 / 60) << 0) * 60 * 1000 -\r\n                //   (Date.now() - Number(localStorage.getItem(\"Timestamp\")))\r\n                // : Math.floor((this.state.value / 1000 / 60) << 0) * 60 * 1000 >=\r\n                //   0)\r\n                //   ? localStorage.getItem(\"Timestamp\")\r\n                //     ? Math.floor((this.state.value / 1000 / 60) << 0) *\r\n                //         60 *\r\n                //         1000 -\r\n                //       (Date.now() - Number(localStorage.getItem(\"Timestamp\")))\r\n                //     : Math.floor((this.state.value / 1000 / 60) << 0) *\r\n                //       60 *\r\n                //       1000\r\n                //   : 0\r\n              }\r\n              direction=\"backward\"\r\n              // startImmediately={false}\r\n              onResume={() => this.setState({ paused: false })}\r\n              \r\n            >\r\n              {({ start, resume, pause, stop, reset, timerState, m }) => (\r\n                <React.Fragment>\r\n                  {/* <div>\r\n                  <Timer.Days /> days\r\n                  <Timer.Hours /> hours\r\n                  <Timer.Minutes /> minutes\r\n                  <Timer.Seconds /> seconds\r\n                  <Timer.Milliseconds /> milliseconds\r\n                </div> */}\r\n                  <div id=\"outer-div\">\r\n                    <div className=\"circular-selector\" id=\"rotate\">\r\n                      {/* <Timer.Hours  formatValue={valueM => ()}/> */}\r\n                      <Timer.Hours\r\n                        formatValue={valueH => (\r\n                          <Timer.Minutes\r\n                            formatValue={valueM => (\r\n                              <Timer.Seconds\r\n                                formatValue={valueS => (\r\n                                  <React.Fragment>\r\n                                    <CircleSlider\r\n                                      value={\r\n                                        (valueH * 60 * 60 +\r\n                                          valueM * 60 +\r\n                                          valueS) *\r\n                                        1000\r\n                                      }\r\n                                      size={400}\r\n                                      // showTooltip={true}\r\n                                      gradientColorFrom=\"#02C0E8\"\r\n                                      gradientColorTo=\"#01F0D1\"\r\n                                      knobRadius={0}\r\n                                      progressWidth={20}\r\n                                      circleWidth={15}\r\n                                      progressColor=\"#6656B6\"\r\n                                      tooltipColor=\"#6ab6e1\"\r\n                                      tooltipSize={20}\r\n                                      min={1}\r\n                                      max={\r\n                                        Math.floor(\r\n                                          (this.state.value / 1000 / 60) << 0\r\n                                        ) *\r\n                                        60 *\r\n                                        1000\r\n                                      }\r\n                                      onChange={this.handleChange}\r\n                                      disabled={true}\r\n                                    />\r\n\r\n                                    {timerState == \"STOPPED\" ||\r\n                                    (valueS == 0 &&\r\n                                      valueH == 0 &&\r\n                                      valueM == 0) ? (\r\n                                      <p id=\"time-completed\">COMPLETED</p>\r\n                                    ) : (\r\n                                      <p id=\"time\">\r\n                                        {valueS >= 0 &&\r\n                                        valueH >= 0 &&\r\n                                        valueM >= 0\r\n                                          ? valueS < 10\r\n                                            ? valueH * 60 +\r\n                                              valueM +\r\n                                              \":\" +\r\n                                              \"0\" +\r\n                                              valueS\r\n                                            : valueH * 60 +\r\n                                              valueM +\r\n                                              \":\" +\r\n                                              valueS\r\n                                          : \"\"}\r\n                                      </p>\r\n                                    )}\r\n                                    {this.titleValue(\r\n                                      timerState == \"STOPPED\"\r\n                                        ? \"COMPLETED\"\r\n                                        : valueS >= 0 &&\r\n                                          valueH >= 0 &&\r\n                                          valueM >= 0\r\n                                        ? valueS < 10\r\n                                          ? valueH * 60 +\r\n                                            valueM +\r\n                                            \":\" +\r\n                                            \"0\" +\r\n                                            valueS\r\n                                          : valueH * 60 + valueM + \":\" + valueS\r\n                                        : \"\"\r\n                                    )}\r\n                                    {this.dataForProgressFunction(\r\n                                      (valueH * 60 * 60 +\r\n                                        valueM * 60 +\r\n                                        valueS) *\r\n                                        1000\r\n                                    )}\r\n                                  </React.Fragment>\r\n                                )}\r\n                              />\r\n                            )}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <button\r\n                    style={{ display: \"none\" }}\r\n                    id=\"paused-button-forjs\"\r\n                    onClick={pause}\r\n                  />\r\n\r\n                  <div id=\"button-div\">\r\n                    {!this.state.paused ? (\r\n                      <React.Fragment>\r\n                        <button\r\n                          className=\"selector-button start-button\"\r\n                          id=\"pause-button\"\r\n                          onClick={() => {\r\n                            pause();\r\n                            this.setState({ paused: true });\r\n                          }}\r\n                        >\r\n                          Pause\r\n                        </button>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      <React.Fragment>\r\n                        <button\r\n                          className=\"selector-button start-button\"\r\n                          id=\"\"\r\n                          onClick={resume}\r\n                        >\r\n                          Resume\r\n                        </button>\r\n                      </React.Fragment>\r\n                    )}\r\n\r\n                    <button\r\n                      className=\"selector-button stop-button\"\r\n                      id=\"\"\r\n                      onClick={() => {\r\n                        this.setState({ selector: true });\r\n                        this.setState({ value: this.props.currentValue });\r\n                        this.setState({ TimestampOnStart: 0 });\r\n                        this.setState({ paused: false });\r\n                        this.titleValue();\r\n                        this.props.handleStop(\"pomodoro\");\r\n                        // localStorage.clear();\r\n                        localStorage.removeItem(\"started\");\r\n                        localStorage.removeItem(\"Timestamp\");\r\n                        localStorage.removeItem(\"value\");\r\n                        localStorage.removeItem(\"remainingTime\");\r\n                        localStorage.removeItem(\"selector\");\r\n                        localStorage.removeItem(\"paused\");\r\n                      }}\r\n                    >\r\n                      STOP\r\n                    </button>\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            </Timer>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <div id=\"outer-div\">\r\n              <div className=\"circular-selector\">\r\n                <CircleSlider\r\n                  value={this.props.currentValue}\r\n                  size={400}\r\n                  // showTooltip={true}\r\n                  gradientColorFrom=\"#02C0E8\"\r\n                  gradientColorTo=\"#01F0D1\"\r\n                  knobRadius={15}\r\n                  progressWidth={20}\r\n                  circleWidth={15}\r\n                  progressColor=\"#6656B6\"\r\n                  tooltipColor=\"#6ab6e1\"\r\n                  tooltipSize={20}\r\n                  min={1 * 60 * 1000}\r\n                  max={this.props.maxValue + 1 * 60 * 1000}\r\n                  onChange={this.handleChange}\r\n                  // disabled={true}\r\n                />\r\n              </div>\r\n              <p id=\"time\">\r\n                {// this.state.value\r\n                Math.floor((this.state.value / 1000 / 60) << 0) + \":\" + \"00\"\r\n                // Math.floor((this.state.value/1000) % 60)\r\n                }\r\n              </p>\r\n            </div>\r\n            <div id=\"button-div\">\r\n              <button\r\n                className=\"selector-button start-button\"\r\n                id=\"\"\r\n                onClick={() => {\r\n                  this.setState({ selector: false });\r\n                  this.setState({ TimestampOnStart: Date.now() });\r\n                  // localStorage.setItem(\"started\", \"pomodoro\");\r\n                  // this.setState({ started: \"pomodoro\" });\r\n                  this.props.handleStart(\"break\");\r\n                }}\r\n              >\r\n                START\r\n              </button>\r\n              <button className=\"selector-button stop-button\" id=\"\">\r\n                STOP\r\n              </button>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CircularSelector;\r\n","import React, { Component } from \"react\";\r\nimport Clock from \"react-live-clock\";\r\nimport \"./Time.css\"\r\n\r\nexport class Time extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"time-div\">\r\n      <h1 id=\"time-hour\">\r\n        <Clock format={\"h:mm:ss\"} ticking={true} id=\"time-part-1\"/>\r\n        <Clock format={\"A\"} ticking={true} id=\"time-part-2\"/>\r\n        <div style={{\"clear\":\"both\"}}></div>\r\n      </h1>\r\n       <h2 id=\"time-date\"><Clock format={\"dddd, MMMM Do | YYYY\"} ticking={true} /></h2>      \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Time;\r\n","import React, { Component } from \"react\";\r\nimport \"./About.css\";\r\nimport cancel from \"../img/cancel.svg\";\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"about-outer-div\">\r\n        <h1 id=\"about-h1\">About</h1>\r\n        <img\r\n          src={cancel}\r\n          alt=\"cancel\"\r\n          onClick={this.props.onCancel}\r\n          id=\"cancel-button\"\r\n        />\r\n\r\n        <div className=\"clear-both\" />\r\n        <div className=\"about-innter-div-1 about-innter\">\r\n          <h2 className=\"inner-title\">About Website</h2>\r\n          <p>\r\n            Pomodoro Timer is Ad free,simple and easy to use Pomodoro\r\n            Timer.Pomodoro Timer is a productivity app which improves your\r\n            focus.New features and improvements are coming in the future\r\n          </p>\r\n        </div>\r\n        <div className=\"about-innter-div-2 about-innter\">\r\n          <h2 className=\"inner-title\">About pomodoro technique</h2>\r\n          <p>\r\n            The Pomodoro Technique is a time management method developed by\r\n            Francesco Cirillo in the late 1980s. The technique uses a timer to\r\n            break down work into intervals, traditionally 25 minutes in length,\r\n            separated by short breaks. Each interval is known as a pomodoro,\r\n            from the Italian word for 'tomato', after the tomato-shaped kitchen\r\n            timer that Cirillo used as a university student.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport \"./Setting.css\";\r\nimport cancel from \"../img/cancel.svg\";\r\nimport { Form, Col, Row } from \"react-bootstrap\";\r\nimport Switch from \"react-switch\";\r\n\r\nexport class Setting extends Component {\r\n  state = {\r\n    PomodoroTimeData: this.props.PomodoroTimeData,\r\n    BreakTimeData: this.props.BreakTimeData\r\n  };\r\n  onPomodoroTimeDataChange(e) {\r\n    this.setState({ PomodoroTimeData: e.target.value });\r\n  }\r\n\r\n  onBreakTimeDataChange(e) {\r\n    this.setState({ BreakTimeData: e.target.value });\r\n  }\r\n  ClickSubmit = () => {\r\n    setTimeout(() => {\r\n      this.ClickSubmitTimeOut1();\r\n    }, 1);\r\n    setTimeout(() => {\r\n      this.ClickSubmitTimeOut2();\r\n    }, 2);\r\n  };\r\n\r\n  ClickSubmitTimeOut1 = () => {\r\n    this.props.history.push(\"/time\");\r\n  };\r\n  ClickSubmitTimeOut2 = () => {\r\n    this.props.history.replace(this.props.location.pathname);\r\n  };\r\n  handlerReset = () => {\r\n    this.setState({ PomodoroTimeData: 25 });\r\n    this.setState({ BreakTimeData: 10 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"setting-outer-div\">\r\n        <h1 id=\"setting-h1\">Settings</h1>\r\n        <img\r\n          src={cancel}\r\n          alt=\"cancel\"\r\n          onClick={this.props.onCancel}\r\n          id=\"cancel-button\"\r\n        />\r\n        <div className=\"clear-both\" />\r\n        <div className=\"settings-inner-div\">\r\n          <Form id=\"setting-form\" onSubmit={this.props.onTimeSubmit}>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={5} className=\"form-label\">\r\n                Show time in Title\r\n              </Form.Label>\r\n              <Col sm={7} className=\"form-input\" id=\"toggle-switch\">\r\n                <Switch\r\n                  checked={this.props.switchChecked}\r\n                  onChange={this.props.handleSwitchChange}\r\n                  onColor=\"#4702e8\"\r\n                  offColor=\"#6d36c5\"\r\n                  onHandleColor=\"#ffffff\"\r\n                  handleDiameter={15}\r\n                  uncheckedIcon={false}\r\n                  checkedIcon={false}\r\n                  boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                  activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                  height={25}\r\n                  width={50}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={5}>\r\n                Default Pomodoro Time\r\n              </Form.Label>\r\n              <Col sm={7} className=\"form-input\">\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Pomodoro Time\"\r\n                  name=\"PomodoroTime\"\r\n                  required\r\n                  value={this.state.PomodoroTimeData}\r\n                  onChange={value => this.onPomodoroTimeDataChange(value)}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={5}>\r\n                Default Break Time\r\n              </Form.Label>\r\n              <Col sm={7} className=\"form-input\">\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Break Time\"\r\n                  name=\"BreakTime\"\r\n                  required\r\n                  value={this.state.BreakTimeData}\r\n                  onChange={value => this.onBreakTimeDataChange(value)}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <input\r\n              type=\"submit\"\r\n              style={{ display: \"none\" }}\r\n              id=\"setting-submit-button\"\r\n            />\r\n            <div className=\"setting-button-div\">\r\n              <button\r\n                onClick={this.ClickSubmit}\r\n                className=\"setting-button start-button\"\r\n              >\r\n                submit\r\n              </button>\r\n              <button\r\n                type=\"reset\"\r\n                onClick={this.handlerReset}\r\n                className=\"setting-button stop-button\"\r\n              >\r\n                reset\r\n              </button>\r\n              <div className=\"clear-both\" />\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Setting;\r\n","import React, { Component } from \"react\";\r\nimport \"./NavButton.css\";\r\n\r\n\r\nexport class NavButton extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"nav-button-outer-div\">\r\n        <div id=\"nav-button-div\">\r\n          <button\r\n            className=\"nav-button\"\r\n            id=\"pomodoro-button\"\r\n            onClick={this.onPomodoro}\r\n          >\r\n            Pomodoro\r\n          </button>\r\n          <button\r\n            className=\"nav-button\"\r\n            id=\"break-button\"\r\n            onClick={this.onBreak}\r\n          >\r\n            Break\r\n          </button>\r\n            <button className=\"nav-button\" id=\"time-button\"\r\n            onClick={this.onTime}\r\n            >\r\n              Time\r\n            </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  onBreak = () => {\r\n    if (this.props.started == \"pomodoro\"\r\n    ) {\r\n      window.alert(\"Stop pomodoro timer before starting break.\");\r\n    } else {\r\n      document\r\n        .getElementById(\"break-button\")\r\n        .classList.add(\"nav-button-selected-js\");\r\n      document\r\n        .getElementById(\"pomodoro-button\")\r\n        .classList.remove(\"nav-button-selected-js\");\r\n      document\r\n        .getElementById(\"time-button\")\r\n        .classList.remove(\"nav-button-selected-js\");\r\n\r\n      this.props.history.push(\"/break\");\r\n    }\r\n  };\r\n  onPomodoro = () => {\r\n    if (this.props.started == \"break\"\r\n    ) {\r\n      window.alert(\"Stop break timer before starting pomodoro timer.\");\r\n    } else {\r\n      document\r\n        .getElementById(\"break-button\")\r\n        .classList.remove(\"nav-button-selected-js\");\r\n      document\r\n        .getElementById(\"pomodoro-button\")\r\n        .classList.add(\"nav-button-selected-js\");\r\n      document\r\n        .getElementById(\"time-button\")\r\n        .classList.remove(\"nav-button-selected-js\");\r\n\r\n      this.props.history.replace(\"/\");\r\n    }\r\n  };\r\n  onTime = () => {\r\n  \r\n      document\r\n        .getElementById(\"break-button\")\r\n        .classList.remove(\"nav-button-selected-js\");\r\n      document\r\n        .getElementById(\"pomodoro-button\")\r\n        .classList.remove(\"nav-button-selected-js\");\r\n      document\r\n        .getElementById(\"time-button\")\r\n        .classList.add(\"nav-button-selected-js\");\r\n\r\n      this.props.history.replace(\"/time\");\r\n    }\r\n  \r\n}\r\n\r\nexport default NavButton;\r\n","import React, { Component } from 'react'\r\nimport \"./NotFound404.css\"\r\n\r\nexport class NotFound404 extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"not-found-page\">\r\n                \r\n                <p>404 | Not Found</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound404;\r\n\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./NavBar.jsx\";\r\n// import NavButton from \"./component/NavButton.jsx\";\r\n// import Temp from \"./Temp.jsx\";\r\nimport CircularSelector from \"./CircularSelector.jsx\";\r\nimport CircularSelector2 from \"./CircularSelector2.jsx\";\r\nimport Time from \"./Time.jsx\";\r\nimport About from \"./About.jsx\";\r\nimport Setting from \"./Setting.jsx\";\r\nimport NavButton from \"./NavButton.jsx\";\r\nimport NotFound404 from \"./NotFound404.jsx\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nexport class Main extends Component {\r\n  state = {\r\n    About: false,\r\n    Setting: false,\r\n    switchChecked: localStorage.getItem(\"switchChecked\")\r\n      ? localStorage.getItem(\"switchChecked\") == \"true\"\r\n      : true,\r\n    PomodoroTimeData: localStorage.getItem(\"PomodoroTimeData\") || 25,\r\n    BreakTimeData: localStorage.getItem(\"BreakTimeData\") || 10,\r\n    started: localStorage.getItem(\"started\") || \"\"\r\n  };\r\n  componentWillUnmount() {\r\n    localStorage.setItem(\"PomodoroTimeData\", this.state.PomodoroTimeData);\r\n    localStorage.setItem(\"BreakTimeData\", this.state.BreakTimeData);\r\n    localStorage.setItem(\"switchChecked\", this.state.switchChecked);\r\n    localStorage.setItem(\"started\", this.state.started);\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", ev => {\r\n      this.componentWillUnmount();\r\n    });\r\n  }\r\n  handleCancel = () => {\r\n    this.setState({ About: false });\r\n    this.setState({ Setting: false });\r\n  };\r\n  handleAboutClick = () => {\r\n    this.setState({ About: true });\r\n    this.setState({ Setting: false });\r\n    document.getElementsByClassName(\"navbar-toggler\")[0].click();\r\n  };\r\n  handleSettingClick = () => {\r\n    this.setState({ Setting: true });\r\n    this.setState({ About: false });\r\n    document.getElementsByClassName(\"navbar-toggler\")[0].click();\r\n  };\r\n  handleSwitchChange = checked => {\r\n    this.setState({ switchChecked: checked });\r\n  };\r\n  handleTimeSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({ PomodoroTimeData: e.target[1].value });\r\n    this.setState({ BreakTimeData: e.target[2].value });\r\n    this.setState({ About: false });\r\n    this.setState({ Setting: false });\r\n    // this.forceUpdate();\r\n  };\r\n  handleStart = value => {\r\n    this.setState({ started: value });\r\n  };\r\n  handleStop = value => {\r\n    this.setState({ started: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <NavBar\r\n          onAboutClick={this.handleAboutClick}\r\n          onSettingClick={this.handleSettingClick}\r\n        />\r\n        {this.state.About ? (\r\n          <About onCancel={this.handleCancel} />\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n        {this.state.Setting ? (\r\n          <Route\r\n            render={props => (\r\n              <Setting\r\n                onCancel={this.handleCancel}\r\n                onTimeSubmit={this.handleTimeSubmit}\r\n                {...props}\r\n                PomodoroTimeData={this.state.PomodoroTimeData}\r\n                BreakTimeData={this.state.BreakTimeData}\r\n                switchChecked={this.state.switchChecked}\r\n                handleSwitchChange={this.handleSwitchChange}\r\n              />\r\n            )}\r\n          />\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n\r\n        <div\r\n          id={this.state.About || this.state.Setting ? \"main-blur-content\" : \"\"}\r\n        >\r\n          <Route\r\n            render={props => (\r\n              <NavButton {...props} started={this.state.started} />\r\n            )}\r\n          />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={props =>\r\n                this.state.started == \"break\" ? (\r\n                  <Redirect to=\"/break\" />\r\n                ) : (\r\n                  <CircularSelector\r\n                    currentValue={this.state.PomodoroTimeData * 60 * 1000}\r\n                    maxValue={this.state.PomodoroTimeData * 2 * 60 * 1000}\r\n                    switchChecked={this.state.switchChecked}\r\n                    handleStart={this.handleStart}\r\n                    handleStop={this.handleStop}\r\n                    //   titleValue={this.props.titleValue}\r\n                  />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/break\"\r\n              render={props =>\r\n                this.state.started == \"pomodoro\" ? (\r\n                  <Redirect to=\"/\" />\r\n                ) : (\r\n                  <CircularSelector2\r\n                    currentValue={this.state.BreakTimeData * 60 * 1000}\r\n                    maxValue={this.state.BreakTimeData * 2 * 60 * 1000}\r\n                    switchChecked={this.state.switchChecked}\r\n                    handleStart={this.handleStart}\r\n                    handleStop={this.handleStop}\r\n                    //   titleValue={this.props.titleValue}\r\n                  />\r\n                )\r\n              }\r\n            />\r\n            <Route exact path=\"/time\" render={props => <Time />} />\r\n            <Route render={props => <NotFound404 />} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport Main from \"./component/Main.jsx\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Route component={Main} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}